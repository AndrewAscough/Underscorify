#include "test10U.h"
#include <iostream>
#include <string>
#include <sstream>
#include <fstream>
#include <iostream> 
#include <string> 
#include <sstream> 
#include <fstream> 
/* 
NEXT GOALS 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
This is really starting to come together this part of the project. I think the next step I should spend helping the program to be able to handle comments. Now I believe 
this will be another large challenge because unlike strings you can have comments that have no clear end really if you dont have the WHOLE line of input. So I think I will 
need to change the way i go through the file by using instead of just going word by word. After that Ill need to be able to detect when we are exiting or entering 
a comment block such as this one with the slash start OR the comment thats just two slashes. 

Bugs to fix: 
- Large amounts of excess whitespace are being added. Though tbh with the goal of this program being to make it unreadable i dont necessarily see this as bad. 
Its more a feature than a bug ;) 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
*/ 
//Determines if input is currently interacting with a string. if isString%2==0, it is not a string 
_ __ ___ ____ _____ 
//Determins if input is in a comment block or not. if isComment%2==0, it is not a comment 
_ ______ ___ ____ _____ 
//checks if the string s contains a special character (defined by anything that isnt an underscore OR alphanumeric) AND an alphanumeric character 
_______ ________ _________ __________ ___________ ____________ _____________ ______________ _______________ _______ ________________ ___ _________________ _____ 
__________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ _____________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 

______________________________________ _______________________________________ _______________ ________________ ___ ________________________________________ _____ 
______________________________________ ______________________________________ ________________________ _________ ________________ ______________ _______________ _________________________________________ ________________________________________ _____ 
______________________________________ _________________________________________ _________________ _____ 
______________________________________ //if the character is a symbol the function returns true. 

______________________________________ _______________________________________ _______________ _________________________________________ ________________________________________ _____ 
______________________________________ _________________________________________ _________________ _____ 
______________________________________ //Checks if a character is an opperator which are: =, <, >, +, -, /, *, ^, !, %, :, |, & 

______________________________________ _________________________________________ _________________ _____ 
______________________________________ //Searches the string to see if the word is a comment 
_______ ____________________________________________________________ _________ __________ ___________ ____________ _____________ ______________ _______________ __________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ _____________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 

______________________________________ ______________________________________ _________________________________________ _________________ _____ 
______________________________________ //Searches the string to see if the word contains /* or */ 
_______ _______________________________________________________________ _________ __________ ___________ ____________ _____________ ______________ _______________ __________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ _____________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 

______________________________________ ______________________________________ _________________________________________ _________________ _____ 
______________________________________ //searches the string if it has a ';' character it'll want to add a newline after it. 
_______ ________________________________________________________________ _________ __________ ___________ ____________ _____________ ______________ _______________ __________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ _____________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 
_______________ ________________________ _________ _____________ _________________________ ___________________ __________________________ ______________________________________________ _________________________________________________________________ ______________ 
_______________ _________________________________________ ________________________________________ _____ 
______________________________________ ______________________________________ _________________________________________ _________________ _____ 
______________________________________ //Takes in a symbolword string and returns a nonsymbolword by separating the symbols with spaces. Also handles string opening and closings without modifying the string by checking isString. 
__________ ___________ ____________ ___________________________________________________________________ _________ __________ ___________ ____________ ____________________________________________________________________ ______________ _______________ __________ ___________ ____________ _____________________________________________________________________ ___ __________________________________________________________________ _____ 
//std::cerr<<std::endl<< << symbolWord << std::endl; 
__________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ ____________________________________________________________________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 
_______________ //So the encountered part of the string is in fact a symbol. 
________________________ _________ __________________________________________ _________ ____________________________________________________________________ _________________________ ___________________ __________________________ ______________ ______________ _______________ //Checks to see if the symbolword is entering/exiting a string. This is to handle a string like: ; or '%' currently within one 
________________________ _________ ____________________________________________________________________ _________________________ ___________________ __________________________ ______________________________________________ ______________________________________________________________________ ________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ ______________________________________________ _______________________________________________________________________ ______________ _______________ //Entering the string 
________________________ _________ __ ________________________________________________________________________ _________________________________________________________________________ ______________________________________________ ____ ______________ _______________ //std::cerr<<std::endl << << result << << i << << isString << << symbolWord <<std::endl; 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ _____ 
______________________________________ //Exiting the string 
_______________________________________ _______________ //std::cerr<<std::endl << << result << << i << << isString << << symbolWord <<std::endl; 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ _____ 
______________________________________ __ _______________________ _____ 
______________________________________ //Section is not a string but IS an operand so it lumps the two symbols together and moves on 
std::cerr<<std::endl<< << i << << symbolWord[i] << symbolWord[i+1] << std::endl; 
_____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ _____________________________________________________________ ______________________________________________________________ __________________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________ _____ 
___________________ _______________________ _____ 
______________________________________ //Section is not an operand, but it is in a string so it does nothing. 
_______________________________________ ________________________ _________ __ ________________________________________________________________________ _________________________________________________________________________ ______________________________________________ ______________________________________________________________ ______________ _______________ _____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ _____ 
______________________________________ //Section is not an operand, nor is it in a string so it splits the symbol away. 
_______________________________________ _______________ _____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________ _____ 
______________________________________ ______________________________________ //Encountered part of string is just a normal alphanumeric char so do nothing. 
_______________________________________ _______________ _____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________ _________________________ ___________________ __________________________ _____ 
______________________________________ ______________________________________ //std::cerr<< << result <<std::endl; 
_____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________ _____ 
_________________________________________ _____________________________________________________________________ _____ 
______________________________________ //Extracts basic comments from a string s that contain 
__________ ___________ ____________ ___________________________________________________________________________ _________ __________ ___________ ____________ ____________________________________________________________________________ ______________ _______________ __________ ___________ ____________ _____________________________________________________________________ _____ 
__________ ___________ ____________ _____________________________________________________________________________ _____ 
__________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ ____________________________________________________________________________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 

___________________ _______________________ _____ 
______________________________________ ______________________________________ _______________________________________ _______________ _____________________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________________ _________________________ ___________________ __________________________ _____ 
______________________________________ ______________________________________ //Readds the part of the string that wasnt a comment. 
_____________________________________________________________________ _____________________ _______________________________________________________________________________ _________ ____ ________________________________________________________________________________ ___________________________________________________________________ _________ _____________________________________________________________________________ ______________ ______________ _____ 
_________________________________________ _____________________________________________________________________ _____ 
______________________________________ //Extracts complex comments where a line could contain multiple /* */ comments 
__________ ___________ ____________ _________________________________________________________________________________ _________ __________ ___________ ____________ ____________________________________________________________________________ ______________ _______________ __________ ___________ ____________ _____________________________________________________________________ _____ 
__________ ___________ ____________ __________________________________________________________________________________ _____ 
__________________ _________ _ ___________________ ___ ____ _____ ___________________ ____________________ ____________________________________________________________________________ _____________________ ______________________ _________ ______________ _____ ___________________ _______________________ ______________ 
_______________ //String block has encountered a comment beginning and up until now the buffer contains non commented strings. The iscomment%2 is used here to ensure we dont have a line like /* foo/* bar*/ 
dd current word to result after separating out the symbolwords 
_____________________________________________________________________ __________________________________________________________________________ ___________________________________________________________________ _________ __________________________________________________________________________________ ______________ _____ 
//reset the buffer to prepare to accept commented strings 
__________________________________________________________________________________ ___ ___________________________________________________________________________________ _____ 
//add the comment beginning of /* to result 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________________ _________________________ ___________________ __________________________ _____ 
___________________ _______________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________________ _________________________ ___________________ __________________________ _____ 
___________________ _______________________ _____ 
//Increment our iscomment to notify the main program that we are now handling a comment string. 
______ _______________________ _____ 
______________________________________ //String block has encountered a comment end. The buffer now contains unmodified strings from the comment 
add buffer to result 
_____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________________________ _____ 
//add the comment tail of */ 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________________ _________________________ ___________________ __________________________ _____ 
___________________ _______________________ _____ 
_____________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________________ _________________________ ___________________ __________________________ _____ 
___________________ _______________________ _____ 
//ensure theres a gap between this and the next string. 
_____________________________________________________________________ __________________________________________________________________________ __________________________________________________________________ _____ 
//reset buffer 
__________________________________________________________________________________ ___ ___________________________________________________________________________________ _____ 
//increment isComment to signal we are no longer in a comment block 
______ _______________________ _____ 
______________________________________ //The line contains outside of a block comment, a comment line. This also would be the end of whatever this function needs to do so we break after 

______________________________________________________________________________________ _____ 
______________________________________ //Adds current char to buffer, buffer will be modified each time isBlockComment returns true. 
__________________________________________________________________________________ __________________________________________________________________________ ____________________________________________________________________________ _________________________ ___________________ __________________________ _____ 

______________________________________ _________________________________________ _____________________________________________________________________ _____ 
heck if there is no filename being given 

_________________________________________ ______________________________________________________________ _____ 
______________________________________ //Opens each file 
__________________ _________ _ ___________________ ___ ______________________________________________________________ _____ ___________________ ____________________ ________________________________________________________________________________________ _____ ___________________ _______________________ ______________ 
_______________ __________ ___________ _______________________________________________________________________________________________ ________________________________________________________________________________________________ _____ 
________________________________________________________________________________________________ _____________________ _________________________________________________________________________________________________ _________ __________________________________________________________________________________________ _________________________ ___________________ __________________________ ______________ _____ 
__________ ___________ ____________ ____________________________________________________________________________ _____ 
//Prints each word of the file on a new line 

__________ ___________ ____________________________________________________________________________________________________ _____________________________________________________________________________________________________ _________ ____________________________________________________________________________ ______________ _____ 
//Check if the word contains a block comment OR if it is currently still in one. Also handles when there is both a line comment and block comment on the same line 

______________________________________ //Check if the REST of the line is a // comment 

______________________________________ //Line does not contain a comment so must be examined 
_______________________________________ _______________ ______________________________________________________________________________ _________ _____________________________________________________________________________________________________ ______________________________________________________________________________________________________ ___________________________________________________________________________________________________ ______________ _______________ //Preprocessor directive thingy, essentially not something I want to mess with. Think #include <iostream> 


______________________________________ __________ ___________ ____________________________________________________________________________________________ _____________________________________________________________________________________________ __________ ___________ ______________________________________________________________________________________________ _____ 
______________________________________________________________________________________ _____ 
______________________________________ //for some resemblance of when a ; is encountered it will put it on a new line 
_______________________________________ ________________________ _________ ________________________________________________________________ _________ ___________________________________________________________________________________________________ ______________ ______________ _______________ __________ ___________ ____________________________________________________________________________________________ _____________________________________________________________________________________________ ___________________________________________________________________ _________ ___________________________________________________________________________________________________ ______________ _____________________________________________________________________________________________ __________ ___________ ______________________________________________________________________________________________ _____ 
______________________________________ //Handles breaking up symbol words and passing through strings without changing the interior. 

______________________________________ //Word is not a symbol word, it can remain unchanged. 

______________________________________ ______________________________________ ______________________________________ ______________________________________ ________________________________________________________________________________________________ _____________________ ________________________________________________________________________________________________________ _________ ______________ _____ 
______________________________________ _________________________________________ ____ _____ 
______________________________________ 
